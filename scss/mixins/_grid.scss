@use 'sass:math';

@mixin make-row($gutter: $grid-gutter-width) {
  #{getVarName('gutter-x')}: #{$gutter};
  #{getVarName('gutter-y')}: 0;
  display: flex;
  flex-wrap: wrap;
  margin-top: calc(-1 * getVar('gutter-y'));
  margin-right: calc(-0.5 * getVar('gutter-x'));
  margin-left: calc(-0.5 * getVar('gutter-x'));
}

@mixin make-col-ready() {
  flex-shrink: 0;
  width: 100%;
  max-width: 100%;
  padding-right: calc(getVar('gutter-x') * 0.5);
  padding-left: calc(getVar('gutter-x') * 0.5);
  margin-top: getVar('gutter-y');
}

@mixin make-col($size: false, $columns: $grid-columns) {
  @if $size {
    flex: 0 0 auto;
    width: math.percentage(math.div($size, $columns));
  } @else {
    flex: 1 1 0;
    max-width: 100%;
  }
}

@mixin make-col-auto() {
  flex: 0 0 auto;
  width: auto;
}

@mixin make-col-offset($size, $columns: $grid-columns) {
  $num: math.div($size, $columns);
  margin-left: if($num == 0, 0, math.percentage($num));
}

@mixin make-grid-columns(
  $columns: $grid-columns,
  $gutter: $grid-gutter-width,
  $breakpoints: $grid-breakpoints,
  $orders: $grid-orders
) {
  @each $breakpoint in map-keys($breakpoints) {
    $infix: breakpoint-infix($breakpoint, $breakpoints);
    @include media-breakpoint-up($breakpoint, $breakpoints) {
      .#{$prefix}col#{$infix} {
        flex: 1 0 0%;
      }
      .#{$prefix}col#{$infix}-auto {
        @include make-col-auto();
      }
      @if $columns > 0 {
        @for $i from 1 through $columns {
          .#{$prefix}col#{$infix}-#{$i} {
            @include make-col($i, $columns);
          }
        }
        @for $i from 0 through ($columns - 1) {
          @if not($infix == '' and $i == 0) {
            .#{$prefix}offset#{$infix}-#{$i} {
              @include make-col-offset($i, $columns);
            }
          }
        }
      }
      @if $orders > 0 {
        @for $i from 1 through $orders {
          .#{$prefix}order#{$infix}-#{$i} {
            order: $i;
          }
        }
      }
      @each $key, $value in $spacers {
        .g#{$infix}-#{$key},
        .g-x#{$infix}-#{$key} {
          column-gap: #{$value};
        }

        .g#{$infix}-#{$key},
        .g-y#{$infix}-#{$key} {
          row-gap: #{$value};
        }

        .#{$prefix}gap#{$infix}-#{$key},
        .#{$prefix}gap-x#{$infix}-#{$key} {
          -#{getVarName('gutter-x')}: #{$value};
        }

        .#{$prefix}gap#{$infix}-#{$key},
        .#{$prefix}gap-y#{$infix}-#{$key} {
          #{getVarName('gutter-y')}: #{$value};
        }
      }
    }
  }
}
